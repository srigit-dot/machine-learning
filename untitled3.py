# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pmOlmlohY8mqrcJbaA1o-OjTBNbHejpj
"""

!pip install gradio
import gradio as gr
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import StandardScaler

# Sample dataset: Age, Salary, Location (1 = Urban, 0 = Rural), Purchase (1 = Yes, 0 = No)
data = pd.DataFrame({
    "Age": [22, 25, 47, 52, 46, 56, 23, 54, 29, 39],
    "Salary": [30000, 40000, 50000, 60000, 70000, 80000, 25000, 75000, 32000, 48000],
    "Location": [1, 0, 1, 0, 1, 0, 1, 0, 1, 1],
    "Purchase": [0, 0, 1, 1, 1, 1, 0, 1, 0, 1]
})

# Split dataset
X = data[["Age", "Salary", "Location"]]
y = data["Purchase"]

# Standardize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Train Decision Tree Classifier
model = DecisionTreeClassifier(max_depth=3, random_state=42)
model.fit(X_train, y_train)

# Prediction function
def predict_purchase(age, salary, location):
    features = np.array([[age, salary, location]])
    features_scaled = scaler.transform(features)  # Scale input data
    prediction = model.predict(features_scaled)

    return "Will Purchase" if prediction[0] == 1 else "Will Not Purchase"

# Gradio UI
interface = gr.Interface(
    fn=predict_purchase,
    inputs=[
        gr.Slider(18, 60, step=1, label="Age"),
        gr.Slider(20000, 100000, step=1000, label="Salary"),
        gr.Radio(["Urban", "Rural"], label="Location", type="index")  # Convert Urban=1, Rural=0
    ],
    outputs="text",
    title="Decision Tree - Purchase Prediction",
    description="Predicts if a person will purchase a product based on age, salary, and location."
)

interface.launch()